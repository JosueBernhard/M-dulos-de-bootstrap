<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proyecto Modal</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>

    <div class="container mt-5">
        <!-- Botón para activar el modal -->
        <button id="modalButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Abrir Modal
        </button>

        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Modal de Ejemplo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        ¡Este es un modal de prueba!
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="js/main.js"></script>
</body>
</html>
// Variables de color
$yellow: #ffcc00;
$red: #ff4d4d;
$green: #33cc33;

// Mixin de estilos
@mixin button-styles($margin, $padding, $color) {
    margin: $margin;
    padding: $padding;
    background-color: $color;
    color: white;
    border-radius: 5px;
    border: none;
}

// Aplicando el mixin al botón
#modalButton {
    @include button-styles(10px, 15px, $yellow);
}

.btn-close {
    background-color: $red !important;
}
// Evento de apertura y cierre del modal
const modalButton = document.getElementById('modalButton');
const modalElement = document.getElementById('exampleModal');

modalElement.addEventListener('show.bs.modal', () => {
    console.log('Modal está abriendo');
    modalButton.disabled = true;
    modalButton.style.backgroundColor = '#6c757d'; // Cambia color
});

modalElement.addEventListener('shown.bs.modal', () => {
    console.log('Modal ha sido completamente abierto');
});

modalElement.addEventListener('hide.bs.modal', () => {
    console.log('Modal está cerrándose');
    modalButton.disabled = false;
    modalButton.style.backgroundColor = ''; // Restaurar color original
});

modalElement.addEventListener('hidden.bs.modal', () => {
    console.log('Modal ha sido completamente cerrado');
});
{
  "name": "proyecto-modal",
  "version": "1.0.0",
  "description": "Proyecto de Modal con Sass, Gulp y Bootstrap",
  "main": "index.html",
  "scripts": {
    "scss": "node-sass -o css/ scss/"
  },
  "devDependencies": {
    "node-sass": "^6.0.0",
    "gulp": "^4.0.2",
    "gulp-sass": "^5.0.0"
  }
}
const gulp = require('gulp');
const sass = require('gulp-sass')(require('sass'));

// Tarea para compilar Sass a CSS
gulp.task('sass', function() {
    return gulp.src('scss/**/*.scss')
        .pipe(sass().on('error', sass.logError))
        .pipe(gulp.dest('css'));
});

// Tarea por defecto
gulp.task('default', gulp.series('sass'));
